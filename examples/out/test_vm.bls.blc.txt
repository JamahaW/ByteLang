------------------------------------------- <<< instructions : test_env >>> --------------------------------------------
  0: [2B] base::exit@0(std::u8)
  1: [2B] base::print@1(std::u8*(std::u32))
  2: [2B] base::print8@2(std::u8*(std::u8))
  3: [2B] base::inc@3(std::u8*(std::i16))
  4: [2B] base::write@4(std::u8)
  5: [5B] base::push32@5(std::u32)
  6: [2B] base::pop32@6(std::u8*(std::u32))
  7: [2B] base::pop16@7(std::u8*(std::u16))
  8: [2B] base::pop8@8(std::u8*(std::u8))

-------------------------------------------------- <<< constants >>> ---------------------------------------------------
A       : { 1 | 1.0 }
B       : { 5 | 5.0 }
C       : { 9 | 9.0 }
---------------------- <<< bytecode view : A:\Projects\ByteLang\examples\out\test_vm.bls.blc >>> -----------------------

#  program start address define
0000: 0A

#  std::u32 A@1 = 0000_0000
0001: 00
0002: 00
0003: 00
0004: 00

#  std::u32 B@5 = 0000_0000
0005: 00
0006: 00
0007: 00
0008: 00

#  std::u8 C@9 = 00
0009: 00

#  [5B] base::push32@5 { (std::u32)31D4_3039 }
000A: 05
000B: 31
000C: D4
000D: 30
000E: 39

#  [2B] base::pop32@6 { (std::u8*(std::u32))01 }
000F: 06
0010: 01

#  [2B] base::print@1 { (std::u8*(std::u32))01 }
0011: 01
0012: 01

#  [5B] base::push32@5 { (std::u32)3039_3039 }
0013: 05
0014: 30
0015: 39
0016: 30
0017: 39

#  [2B] base::pop16@7 { (std::u8*(std::u16))05 }
0018: 07
0019: 05

#  [2B] base::print@1 { (std::u8*(std::u32))05 }
001A: 01
001B: 05

#  [2B] base::pop16@7 { (std::u8*(std::u16))05 }
001C: 07
001D: 05

#  [2B] base::print@1 { (std::u8*(std::u32))05 }
001E: 01
001F: 05

#  [5B] base::push32@5 { (std::u32)31D4_3039 }
0020: 05
0021: 31
0022: D4
0023: 30
0024: 39

#  [2B] base::pop8@8 { (std::u8*(std::u8))09 }
0025: 08
0026: 09

#  [2B] base::print8@2 { (std::u8*(std::u8))09 }
0027: 02
0028: 09

#  [2B] base::pop8@8 { (std::u8*(std::u8))09 }
0029: 08
002A: 09

#  [2B] base::print8@2 { (std::u8*(std::u8))09 }
002B: 02
002C: 09

#  [2B] base::pop8@8 { (std::u8*(std::u8))09 }
002D: 08
002E: 09

#  [2B] base::print8@2 { (std::u8*(std::u8))09 }
002F: 02
0030: 09

#  [2B] base::pop8@8 { (std::u8*(std::u8))09 }
0031: 08
0032: 09

#  [2B] base::print8@2 { (std::u8*(std::u8))09 }
0033: 02
0034: 09

#  [2B] base::exit@0 { (std::u8)00 }
0035: 00
0036: 00
